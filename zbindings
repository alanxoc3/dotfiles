#!/usr/bin/zsh
if zmodload zsh/parameter 2>/dev/null && (( ${+options} )); then
  __fzf_key_bindings_options="options=(${(j: :)${(kv)options[@]}})"
else
  () {
    __fzf_key_bindings_options="setopt"
    local __fzf_opt
    for __fzf_opt in "${(@)${(@f)$(set -o)}%% *}"; do
      if [[ -o "$__fzf_opt" ]]; then
        __fzf_key_bindings_options+=" -o $__fzf_opt"
      else
        __fzf_key_bindings_options+=" +o $__fzf_opt"
      fi
    done
  }
fi

emulate zsh -o no_aliases

eval $__fzf_key_bindings_options
unset __fzf_key_bindings_options

[[ -o interactive ]] || return 0

zshbind() {
    zle     -N   "$2"
    bindkey "$1" "$2"
}

# backspace stops at some extra characters
backward-kill-dir() {
    local WORDCHARS=${WORDCHARS/\//|}
    zle backward-kill-word
    zle -f kill
}

# fzf_eval_modes is a bash function in ~/.dotfiles/aliases
kbf_fzf_eval_modes() {
    zle reset-prompt
    BUFFER="$(fzf_eval_modes $1)"
    local ret=$?
    [[ -n "$BUFFER" ]] && zle accept-line
    return $ret
}

# fzf_echo_modes is a bash function in ~/.dotfiles/aliases
kbf_fzf_echo_modes() {
    LBUFFER="${LBUFFER}$(fzf_echo_modes $1)"
    local ret=$?
    zle reset-prompt
    return $ret
}

kb_fzf_eval_modes() { kbf_fzf_eval_modes }
zshbind '\ez' kb_fzf_eval_modes

kb_fzf_echo_modes() { kbf_fzf_echo_modes }
zshbind '^z' kb_fzf_echo_modes

kb_fzf_eval_cd() { kbf_fzf_eval_modes fzf_eval_cd }
zshbind '\ec' kb_fzf_eval_cd

kb_fzf_echo_files() { kbf_fzf_echo_modes fzf_echo_files }
zshbind '^t' kb_fzf_echo_files

kb_fzf_echo_history() { kbf_fzf_echo_modes fzf_echo_history }
zshbind '^r' kb_fzf_echo_history

# tab & backspace
bindkey '\t' expand-or-complete-prefix
zshbind '^[^?' backward-kill-dir
