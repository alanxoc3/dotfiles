#!/bin/bash
# Achivement Parser Stats
# Usage: apstats <goal-name> <hours-in-year> <ttrack groups>...
# This script can be used to show progress on a yearly goal.

formatdur() {
cat << EOF | lua
str = ''
num = math.floor(($1))           if num ~= 0 then str = str..num..'h' end
num = math.floor(($1)%1*60)      if num ~= 0 or str ~= '' then str = str..num..'m' end
num = math.floor(($1)%1*60%1*60) str = str..num..'s'
print(str)
EOF
}

parsedur() {
    local x=$(cat <<< $1 | pcregrep -o1 '([0-9]+)'"$2")
    cat <<< ${x:-0}
}

durdecimal() {
    local tthours=$(parsedur $1 h)
    local ttminutes=$(parsedur $1 m)
    local ttseconds=$(parsedur $1 s)
    echo "print($tthours+$ttminutes/60+$ttseconds/60/60)" | lua
}

END_DATE=${3:-$(date +%F)}
YEAR=$(date -d $END_DATE +%Y)
DAY_OF_YEAR=$(date -d $END_DATE +%j)
DAYS_IN_YEAR=$(date -d "$YEAR-12-31" +%j)
DAYS_LEFT=$(echo "$DAYS_IN_YEAR-$DAY_OF_YEAR+1" | bc)

BEG_DATE="$YEAR-01-01"

OVERALL_DURATION=$(ttrack agg -b $BEG_DATE -e $END_DATE ${*:4})
DAILY_DURATION=$(ttrack agg -b $END_DATE -e $END_DATE ${*:4})

OVERALL_GOAL_DURATION=$(formatdur "$2")
HOURS_PER_REMAINING_DAY=$(echo "print(math.max(0, ($2-$(durdecimal $OVERALL_DURATION)+$(durdecimal $DAILY_DURATION))/$DAYS_LEFT))" | lua)
DURATION_PER_REMAINING_DAY=$(formatdur $HOURS_PER_REMAINING_DAY)
printf "%+9s %+9s / %-9s %+11s / %-11s\n" \
    "$1:" \
    "$DAILY_DURATION" \
    "$DURATION_PER_REMAINING_DAY" \
    "$OVERALL_DURATION" \
    "$OVERALL_GOAL_DURATION" \
