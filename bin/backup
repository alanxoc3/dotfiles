#!/bin/bash
# takes stdin and saves it to a file with a certain prefix, while removing backups if there are too many
# this solution is not exact, but good enough

: ${bpath:=.}
: ${bprefix:=}
: ${bpostfix:=}

bcount=$1

# Wish there was a better way, but here is how I escape the grep:
# https://stackoverflow.com/questions/11856054/is-there-an-easy-way-to-pass-a-raw-string-to-grep
ere_quote() {
    sed 's/[][\.|$(){}?+*^]/\\&/g' <<< "$*"
}

if [ -z "$bcount" ]; then
    echo 'USAGE: bpath=... bprefix=... bpostfix=... backup <backup-count>'
    exit 1
fi

if [ ! -d "$bpath" ]; then
    echo 'Error: Path does not exist!'
    exit 1
fi

cat > "$bpath/$bprefix$(date +%Y_%m_%d_%H.%M.%S)$bpostfix"

cd "$bpath"
BACKUP_PREFIX_ESCAPE=$(ere_quote "$bprefix")
BACKUP_POSTFIX_ESCAPE=$(ere_quote "$bpostfix")

for f in $(find ./ -mindepth 1 -maxdepth 1 |
           grep -E \^"./$BACKUP_PREFIX_ESCAPE"'[0-9]+_[0-9]+_[0-9]+_[0-9]+\.[0-9]+\.[0-9]+'"$BACKUP_POSTFIX_ESCAPE"\$ |
           sort -rV |
           awk "NR > $bcount"); do
    rm "$f"
done
