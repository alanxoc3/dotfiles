#!/usr/bin/env python
try:
  from signal import signal, SIGPIPE, SIG_DFL
  signal(SIGPIPE,SIG_DFL) # this code block lets us ignore broken pipes, so it might fix some ctrl-c error messages, it might be completely unnecessary though

  import openai
  import sys

  OPENAI_MODEL = "gpt-4-turbo-preview"
  # OPENAI_MODEL = "gpt-3.5-turbo"

  # From: https://stackoverflow.com/questions/5574702/how-do-i-print-to-stderr-in-python
  def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)
    sys.exit(1)

  role_lines = [
    "user usr human alan me",
    "system sys",
    "assistant bot rob hlp ass helper robot",
  ]
  roles_dict = {}

  for rolestr in role_lines:
    roles = rolestr.split()
    for role in roles:
      roles_dict[role] = roles[0]

  args = sys.argv[1:]
  messages = []
  for role, message in zip(args[0::2], args[1::2]):
    if role not in roles_dict: eprint(f"This role is not valid: {role}")
    messages.append({"role": roles_dict[role], "content": message})

  if len(args) % 2 == 1:
    if args[-1] not in roles_dict: eprint(f"This role is not valid: {role}")
    messages.append({"role": roles_dict[args[-1]], "content": sys.stdin.read()})

  client = openai.OpenAI()

  stream = client.chat.completions.create(model=OPENAI_MODEL, messages=messages, stream=True, temperature=0)

  for chunk in stream:
    sys.stdout.write(chunk.choices[0].delta.content or "")
    sys.stdout.flush()
except: pass
