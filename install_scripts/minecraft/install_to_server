#!/bin/bash
# assumes ufw and mcrcon are installed: https://github.com/Tiiffi/mcrcon.git

if [ "${EUID:-$(id -u)}" -ne 0 ]; then
    echo "Rerun this script as root! Exiting with non-zero error code."
    exit 1
fi

# after this script, make sure you download the minecraft installer:
# fabric   download: https://fabricmc.net/use/server/
# official download: https://www.minecraft.net/en-us/download/server

# user group mode destination
install_stdin() {
    local stdin=$(cat)
    local file=$(mktemp)
    cat > "$file" <<< "$stdin"
    install -o "$1" -g "$2" -m "$3" "$file" "$4"
    rm "$file"
}

pacman -Syu python-pip --noconfirm
pip install openai --break-system-packages

ufw allow 25565 # allow minecraft port
ufw deny 25575  # deny rcon port to internet
useradd -Md /srv/minecraft minecraft
install -o minecraft -g minecraft -m 0700 -d /srv/minecraft

# create symbolic link if it doesn't exist
[ ! -L /srv/minecraft/minecraft_server.jar ] && (ln -fs /usr/bin/false /srv/minecraft/minecraft_server.jar)

install_stdin minecraft minecraft 0600 /srv/minecraft/eula.txt << EOF
eula=true
EOF

install_stdin minecraft minecraft 0600 /srv/minecraft/server.properties << EOF
allow-flight=false
allow-nether=true
broadcast-console-to-ops=true
broadcast-rcon-to-ops=true
difficulty=hard
enable-command-block=true
enable-jmx-monitoring=false
enable-query=false
enable-rcon=true
enable-status=true
enforce-secure-profile=true
enforce-whitelist=false
entity-broadcast-range-percentage=100
force-gamemode=true
function-permission-level=2
gamemode=survival
generate-structures=true
generator-settings={}
hardcore=false
hide-online-players=false
level-name=world
level-seed=
level-type=minecraft\:normal
max-chained-neighbor-updates=1000000
max-players=20
max-tick-time=-1
max-world-size=29999984
motd=\u00A7fMorgcraft\! \u00A74\u00A7omon-fri \u00A78\u00A7o19\:00-20\:30 us/mt\n\u00A7f......................... \u00A74\u00A7osat-sun \u00A78\u00A7o18\:00-21\:30 us/mt
network-compression-threshold=256
online-mode=true
op-permission-level=4
player-idle-timeout=0
prevent-proxy-connections=false
previews-chat=false
pvp=true
query.port=25565
rate-limit=0
rcon.password=pass
rcon.port=25575
require-resource-pack=false
resource-pack=
resource-pack-prompt=
resource-pack-sha1=
server-ip=
server-port=25565
simulation-distance=10
spawn-animals=true
spawn-monsters=true
spawn-npcs=true
spawn-protection=0
sync-chunk-writes=true
text-filtering-config=
use-native-transport=true
view-distance=10
white-list=false
EOF

echo '[]' | install_stdin minecraft minecraft 0600 /srv/minecraft/whitelist.json

awk '!/^\s*#/' << EOF | install_stdin minecraft minecraft 0600 /srv/minecraft/ops.json
[
  { "uuid": "de0f3b94-e2f5-4d79-8df8-fe7567ce7ecc", "name": "WolfFang181",    "level": 1, "bypassesPlayerLimit": true },
  { "uuid": "22536222-f7fd-455c-b3bf-6056eba7be5e", "name": "alanxoc3",       "level": 1, "bypassesPlayerLimit": true },
  { "uuid": "ecb96fe7-3c30-43cc-9c7d-e05f66814143", "name": "WadloTheWizard", "level": 1, "bypassesPlayerLimit": true },
  { "uuid": "7d0bbea7-7c5e-4fb3-91bb-9b9564b261b7", "name": "GreatCadet",     "level": 1, "bypassesPlayerLimit": true }
]
EOF

install_stdin root root 0500 /usr/local/bin/update_install_to_server << EOF
#!/bin/bash
curl -o /usr/local/bin/install_to_server https://raw.githubusercontent.com/alanxoc3/dotfiles/main/install_scripts/minecraft/install_to_server 2>/dev/null && chmod 700 /usr/local/bin/install_to_server
EOF

install_stdin root root 0644 /etc/systemd/system/minecraft-setup.service << EOF
[Unit]
After=local-fs.target network.target multi-user.target srv-minecraft.mount

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStartPre=/usr/local/bin/update_install_to_server
ExecStart=/usr/local/bin/install_to_server

[Install]
WantedBy=network.target
EOF

JAVA_MAX_MEMORY=$(free -m | grep -E '^Mem:' | awk '{print int($2*.8)}')
install_stdin root root 0644 /etc/systemd/system/minecraft.service << EOF
[Unit]
After=local-fs.target network.target multi-user.target srv-minecraft.mount

[Service]
User=minecraft
Group=minecraft
WorkingDirectory=/srv/minecraft
ExecStart=/usr/bin/java -Xms512M -Xmx${JAVA_MAX_MEMORY}M -jar minecraft_server.jar nogui
ExecStartPost=/usr/local/bin/prep-on-start

[Install]
WantedBy=network.target
EOF

install_stdin root root 0555 /usr/local/bin/mccmd << EOF
#!/bin/bash
until mcrcon -p pass "\$@" 2>/dev/null; do echo connection failed... trying again in 1 second.; sleep 1s; done
EOF

install_stdin root root 0555 /usr/local/bin/prep-on-start << EOF
#!/bin/bash
mccmd 'say ----------------------------'
mccmd 'say WELCOME TO MORGCRAFT!'
mccmd 'say ----------------------------'
mccmd 'gamerule playersSleepingPercentage 10'
EOF

install_stdin root root 0500 /usr/local/bin/prep-for-shutdown << EOF
#!/bin/bash
BACKUP_COUNT=5

mccmd 'say ----------------------------'
mccmd 'say JOIN MORGCRAFT AGAIN TOMORROW!'
mccmd 'say ----------------------------'
mccmd 'say MON-FRI 19:00-20:30 US/MT'
mccmd 'say SAT-SUN 18:00-21:30 US/MT'
mccmd 'say ----------------------------'
mccmd 'say Server will shutdown in 60 seconds...'

for i in {50..30..10}; do
    sleep 10s
    mccmd "say \$i"
done

for i in {25..10..5}; do
    sleep 5s
    mccmd "say \$i"
done

for i in {9..1}; do
    sleep 1s
    mccmd "say \$i"
done

sleep 1s

mccmd 'say Saving and shutting down server...'
mccmd save-off
mccmd save-all

mkdir -p /srv/minecraft/backup
sleep 1s
sync

tar -czf /srv/minecraft/backup/"\$(date +%Y_%m_%d_%H.%M.%S).tar.gz" /srv/minecraft/world --totals
for f in \$(find /srv/minecraft/backup -mindepth 1 | sort -rV | awk "NR > \$BACKUP_COUNT"); do rm \$f; done
sync

mccmd save-on # in case command was run manually
mccmd 'say Goodbye!'
EOF

install_stdin root root 0500 /usr/local/bin/remove_extra_spaces << EOF
#!/usr/bin/python3
import re
import sys
print(re.sub("\s+", " ", sys.stdin.read()).strip())
EOF

install_stdin root root 0500 /usr/local/bin/mcqotd << EOF
#!/bin/bash
while true; do
  if [ -f /srv/minecraft/current_quest ]; then
    mccmd "say CURRENT KING DECREE: \$(cat /srv/minecraft/current_quest | remove_extra_spaces)"
  fi

  sleep 5m
done
EOF

install_stdin root root 0500 /usr/local/bin/mcgptpython << EOF
#!/usr/bin/python3

import openai  # for generating ai content

system_prompt = '''
You are the king of a minecraft survival server called "Morgiu" and are responsible for directing your citizens to complete a small challenge.

The small challenge must match only one of the following categories:
- changing the landscape of a specific area
- obtaining/crafting/baking a specific amount of an resource/item/food
- build something small in a specific place with one or more specific blocks
- defeating/capturing a specific mob in an unconventional way
- enchanting something specific
- rennovating a specific structure within the kingdom

The challenge must be small enough to complete by 1 person within 30 minutes, though you must not specify any time constraints in the actual challenge.

Any resources/mobs/biomes mentioned in the challenge must actually exist in a vanilla/modless minecraft server.

Any lore that does not exist in a vanilla minecraft server must contain the quadgram "morg" in its title.

Be concise and talk like the king. Use only one sentence with no quotes, colons, newlines, or any other unneeded punctuation.

Start your sentence by addressing the citizens of the kingdom then saying "you must". EG: "My dear citizens, you must..."
'''

completion = openai.ChatCompletion.create(temperature=1, model='gpt-3.5-turbo', messages=[{"role": "system", "content": system_prompt.strip()}])

print(completion["choices"][0]["message"]["content"])
EOF

install_stdin root root 0500 /usr/local/bin/mcgpt << EOF
#!/bin/bash
CHALLENGE_TEXT="\$(OPENAI_API_KEY=\$(cat /srv/minecraft/mcsecret) mcgptpython)"
mccmd 'say THE KING DECREES: '"\$CHALLENGE_TEXT" 2>&1 >/dev/null
tee /srv/minecraft/current_quest <<< "\$CHALLENGE_TEXT"
EOF

install_stdin root root 0644 /etc/systemd/system/minecraft-qotd.service << EOF
[Unit]
After=minecraft.service

[Service]
WorkingDirectory=/srv/minecraft
ExecStart=/usr/local/bin/mcqotd

[Install]
WantedBy=network.target
EOF

systemctl daemon-reload
systemctl disable minecraft.service minecraft-qotd.service
systemctl enable  minecraft-setup.service
systemctl start   minecraft.service minecraft-qotd.service
