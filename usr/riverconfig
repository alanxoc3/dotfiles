#!/bin/sh

# https://github.com/MaxVerevkin/wl-gammarelay-rs
# for mpv maybe use one of the --input- options to fastforward

# easy way to switch between color theme
# no parallel, because it's cleaner that way
# colors are all from the pico-8 palette!

dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river
# old: XDG_SESSION_DESKTOP=river DISPLAY="$DISPLAY"
systemctl --user set-environment XDG_SESSION_DESKTOP=river XDG_CURRENT_DESKTOP=river DISPLAY="$DISPLAY" WAYLAND_DISPLAY="$WAYLAND_DISPLAY"

NORMAL_MODE_COLOR='     riverctl background-color 0x111D35; riverctl border-color-focused 0x065AB5; riverctl border-color-unfocused 0x1d2b53; riverctl border-color-urgent 0x1d2b53'
RECORD_MODE_COLOR='     riverctl background-color 0x291814; riverctl border-color-focused 0xBE1250; riverctl border-color-unfocused 0x422136; riverctl border-color-urgent 0x422136'
PASSTHROUGH_MODE_COLOR='riverctl background-color 0x000000; riverctl border-color-focused 0xC2C3C7; riverctl border-color-unfocused 0x5F574F; riverctl border-color-urgent 0x5F574F'
eval "$NORMAL_MODE_COLOR"

# create modes, can't be parallelized
riverctl declare-mode passthrough
riverctl declare-mode record

# order of this command block is important
# before starting other wayland services i use through systemd, i need to have important env variables imported into systemd
systemctl --user reset-failed swayidle wl-gammarelay-rs rivertile foot-server
systemctl --user restart      swayidle wl-gammarelay-rs rivertile foot-server
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus busctl --user set-property rs.wl-gammarelay / rs.wl.gammarelay Temperature q 3500

# and finally start up the other services
riverctl default-layout rivertile

# start with styling and general configuration
riverctl set-repeat 50 300 &
riverctl border-width 6 &
riverctl rule-add ssd & # make it so windows cant use their own border. river changed this default in version 0.3.0

# switching the output will warp the cursor to the center
riverctl set-cursor-warp on-output-change &

# float exception for alacritty when opened in special way (homespun dmenu with fzf)
riverctl float-filter-add app-id progterm &

for mode in normal record; do
    # yes, this first line is confusing. basically, using my shell fzf thing to execute a program in the background.
    riverctl map $mode Super         Space  spawn 'footclient -a progterm -t xterm-256color /bin/zsh -li -c '\''echo $(fzf_modes exec) \& | bash'\' &
    riverctl map $mode Super+Shift   Space  spawn 'footclient -a progterm -t xterm-256color /bin/zsh -li -c '\''fzf_modes passclip'\' &
    riverctl map $mode Super         Return spawn 'footclient             -t xterm-256color /bin/zsh -li -c "tmux"' &
    riverctl map $mode Super+Shift   Return spawn 'footclient             -t xterm-256color /bin/zsh -li -c "tmux attach"' &
    riverctl map $mode Super+Control Return spawn 'footclient             -t xterm-256color /bin/zsh -li' &
    riverctl map $mode Super         c      spawn 'sh -c "killall warpd; warpd -c /home/alan/.dot/warpd-config -f --grid"' &

    # some output shortcuts
    riverctl map $mode Super N focus-output next
    riverctl map $mode Super+Shift N send-to-output next
    riverctl map $mode Super M spawn "wl-mirror -r '0,0 2256x1504'"

    [[ $(riverctl list-input-configs | rg -A1 "^pointer" | rg events: | head -n 1 | awk "{print \$2}") = "enabled" ]]

    riverctl map $mode Super P spawn 'NEWSTATE=$([[ $(riverctl list-input-configs | rg -A1 "^pointer" | rg events: | head -n 1 | awk "{print \$2}") = "enabled" ]] && echo disabled || echo enabled); for p in $(riverctl list-inputs | rg "^pointer"); do riverctl input "$p" events "$NEWSTATE"; done'

    # view navigation
    riverctl map $mode Super H focus-view -skip-floating previous &
    riverctl map $mode Super J focus-view -skip-floating next &
    riverctl map $mode Super L focus-view -skip-floating next &
    riverctl map $mode Super K focus-view -skip-floating previous &

    riverctl map $mode Super+Shift H swap       previous &
    riverctl map $mode Super+Shift J swap       next &
    riverctl map $mode Super+Shift K swap       previous &
    riverctl map $mode Super+Shift L swap       next &

    riverctl map $mode Super+Control H send-layout-cmd rivertile "main-location left" &
    riverctl map $mode Super+Control J send-layout-cmd rivertile "main-location bottom" &
    riverctl map $mode Super+Control K send-layout-cmd rivertile "main-location top" &
    riverctl map $mode Super+Control L send-layout-cmd rivertile "main-location right" &

    # state change
    riverctl map $mode Super Q close &
    riverctl map $mode Super T toggle-float &
    riverctl map $mode Super F toggle-fullscreen &

    # screenshot
    riverctl map $mode Super       F11 spawn 'grim -g "$(slurp)" - | wl-copy; wl-paste > /tmp/ss.png' &
    riverctl map $mode Super+Shift F11 spawn 'grim - | wl-copy' &

    # change main size
    riverctl map $mode Super Bracketleft  send-layout-cmd rivertile "main-ratio -0.05" &
    riverctl map $mode Super Bracketright send-layout-cmd rivertile "main-ratio +0.05" &

    # moving floating windows
    riverctl map-pointer $mode Super BTN_LEFT  move-view &
    riverctl map-pointer $mode Super BTN_RIGHT resize-view &

    # power button and escope will lock, shutdown, and log out
    riverctl map $mode Super Backspace spawn 'waylock -init-color 0x000000 -input-color 0x1d2b53 -fail-color 0xff004d' &
    riverctl map $mode None XF86PowerOff spawn 'systemctl suspend; waylock -init-color 0x000000 -input-color 0x1d2b53 -fail-color 0xff004d' &

    # switching workspaces/tags
    for i in $(seq 1 9); do
        tags=$((1 << ($i - 1)))
        riverctl map $mode Super $i set-focused-tags $tags &
        riverctl map $mode Super+Shift $i set-view-tags $tags &
        riverctl map $mode Super+Control $i toggle-focused-tags $tags &
        riverctl map $mode Super+Shift+Control $i toggle-view-tags $tags &
    done
done

riverctl map locked None XF86PowerOff spawn 'systemctl suspend' &

# available for normal, record, and locked modes
for mode in normal record locked; do
    riverctl map-switch $mode lid close spawn 'if [ $(bc -l <<< "$(light) == 0") = 0 ]; then light -O; light -S 0; fi' &
    riverctl map-switch $mode lid open spawn  'if [ $(bc -l <<< "$(light) == 0") = 1 ]; then light -I; fi' &

    riverctl map $mode Super F1  spawn 'pamixer --set-volume 0' &
    riverctl map $mode Super F2  spawn 'pamixer --set-volume 40' &
    riverctl map $mode Super F3  spawn 'pamixer --set-volume 60' &
    riverctl map $mode Super F4  spawn 'pamixer --set-volume 100' &
    riverctl map $mode Super F5  spawn 'systemctl --user is-active radico8-player && systemctl --user stop radico8-player || systemctl --user start radico8-player' &
    riverctl map $mode Super F6  spawn 'light -S 4' &
    riverctl map $mode Super F7  spawn 'light -S 25' &
    riverctl map $mode Super F8  spawn 'light -S 100' &
    riverctl map $mode Super F9  spawn 'export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus; if [ "$(busctl --user get-property rs.wl-gammarelay / rs.wl.gammarelay Temperature)" = "q 6500" ]; then busctl --user set-property rs.wl-gammarelay / rs.wl.gammarelay Temperature q 3500; else busctl --user set-property rs.wl-gammarelay / rs.wl.gammarelay Temperature q 6500; fi' &
    riverctl map $mode Super F10 spawn 'export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus; busctl --user call rs.wl-gammarelay / rs.wl.gammarelay ToggleInverted' &
done

# passthrough mode doesn't allow any keybindings besides super+shift+f11
riverctl map normal      Super               Delete       spawn "riverctl enter-mode passthrough; $PASSTHROUGH_MODE_COLOR" &
riverctl map passthrough Super               Delete       spawn "riverctl enter-mode normal;      $NORMAL_MODE_COLOR" &
riverctl map normal      Super+Shift         Delete       exit &
riverctl map passthrough None                XF86PowerOff spawn 'systemctl poweroff' &

riverctl map normal Super       F12 spawn 'riverctl enter-mode record; '"$RECORD_MODE_COLOR"'; rm -rf /tmp/record.gif; wf-recorder -g "$(slurp)" -F fps=30 -c gif -f /tmp/record.gif; cat /tmp/record.gif | wl-copy' &
riverctl map normal Super+Shift F12 spawn 'riverctl enter-mode record; '"$RECORD_MODE_COLOR"'; rm -rf /tmp/record.gif; wf-recorder -F fps=30 -c gif -f /tmp/record.gif; cat /tmp/record.gif | wl-copy' &
riverctl map record Super       F12 spawn 'sh -c '\''killall -s INT wf-recorder; riverctl enter-mode normal; '"$NORMAL_MODE_COLOR"\' &

# general mouse configuration
for p in $(riverctl list-inputs | rg '^pointer'); do
    riverctl input "$p" events enabled &
    riverctl input "$p" tap enabled &
    riverctl input "$p" click-method clickfinger &
    riverctl input "$p" disable-while-typing disabled &
done

systemctl --user stop pipewire wireplumber xdg-desktop-portal xdg-desktop-portal-wlr xdg-desktop-portal-gtk
systemctl --user restart wireplumber xdg-desktop-portal xdg-desktop-portal-wlr xdg-desktop-portal-gtk
